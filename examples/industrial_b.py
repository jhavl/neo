#!/usr/bin/env python
"""
@author Jesse Haviland
"""

import roboticstoolbox as rp
import spatialmath as sm
import numpy as np
import time

# Configurations
q0 = [-0.2762, 0.894, -0.4462, -1.6105,  2.328, -1.0881, -2.3999]
q1 = [-0.571, -0.3534, -1.7684, -1.5384, -2.7693, -1.5537, -1.4818]
q2 = [-0.1708,  0.093, -1.1193, -1.0388,  2.8681, -1.4571, -1.9924]
q3 = [0.2855, -0.198, -3.2144, -1.0791, -2.0565, -1.1219, -0.6414]
q4 = [-0.5471,  0.1817, -1.835, -1.6187,  3.0026, -1.7675, -1.3979]
q5 = [0.1713,  0.377, -0.5826, -0.5771, -1.5264, -0.4143,  2.0764]
q6 = [0.514,  0.2662, -1.2524, -0.6177,  2.9156, -0.2591, -1.7356]
q7 = [0.5512, -0.3535, -1.2124, -0.4724, -2.1021, -0.5965, -2.8023]
q8 = [0.5272,  0.7193, -0.9876, -0.5453,  1.2938, -0.3151, -0.5195]
q9 = [-0.3728,  1.0259, -0.9876, -1.2082,  2.0042, -1.3781, -1.6173]
qs = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9]

# Collisions
s1 = rp.Box(
    scale=[0.4, 1.4, 0.02],
    base=sm.SE3(0.75, -0.1, 0.7))

s2 = rp.Box(
    scale=[1.1, 0.3, 0.02],
    base=sm.SE3(0.4, -0.65, 0.7))

s3 = rp.Box(
    scale=[0.02, 0.2, 0.3],
    base=sm.SE3(0.1, -0.7, 0.85))

s4 = rp.Box(
    scale=[0.02, 0.2, 0.3],
    base=sm.SE3(0.3, -0.7, 0.85))

s5 = rp.Box(
    scale=[0.02, 0.2, 0.3],
    base=sm.SE3(0.5, -0.7, 0.85))

s6 = rp.Box(
    scale=[0.42, 0.3, 0.02],
    base=sm.SE3(0.3, -0.65, 0.71))

s7 = rp.Box(
    scale=[0.02, 0.1, 0.06],
    base=sm.SE3(0.1, -0.55, 0.73))

s8 = rp.Box(
    scale=[0.02, 0.1, 0.06],
    base=sm.SE3(0.3, -0.55, 0.73))

s9 = rp.Box(
    scale=[0.02, 0.1, 0.06],
    base=sm.SE3(0.5, -0.55, 0.73))

s10 = rp.Box(
    scale=[0.42, 0.02, 0.06],
    base=sm.SE3(0.3, -0.5, 0.73))

s11 = rp.Box(
    scale=[0.42, 0.02, 0.06],
    base=sm.SE3(0.3, -0.59, 0.93))

s12 = rp.Box(
    scale=[0.42, 0.02, 0.34],
    base=sm.SE3(0.3, -0.79, 0.87))

s13 = rp.Box(
    scale=[0.42, 0.2, 0.02],
    base=sm.SE3(0.3, -0.7, 0.9))

s14 = rp.Box(
    scale=[0.3, 0.02, 0.45],
    base=sm.SE3(0.8, 0.25, 0.925))

s15 = rp.Box(
    scale=[0.3, 0.02, 0.45],
    base=sm.SE3(0.8, -0.25, 0.925))

s16 = rp.Box(
    scale=[0.3, 0.52, 0.02],
    base=sm.SE3(0.8, -0.00, 1.16))

s17 = rp.Box(
    scale=[0.42, 0.02, 0.34],
    base=sm.SE3(0.3, -0.79, 0.87))

s = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12,
     s13, s14, s15, s16, s17]

# Launch Simulator
env = rp.backend.Swift()
env.launch()

# Make PR2 and set joint angles
r = rp.models.PR2()
r.q = [
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16825, 0.0,
    0.0, 0.0, -0.2761549481623158, 0.8939542514393661, -0.4462472669817504,
    -1.6105027440487039, 2.328001213611822, -1.0881333252440992,
    -2.3998853474978716, 2.248201624865942e-15, 0.0, 0.0, 0.0, 0.0, 0.0,
    -1.1102230246251565e-16, 1.1473791555597268, -0.2578419004077155,
    0.5298918609954418, -2.121201719392923, 2.198118788614387,
    -1.4189668927954484, 2.1828521334438378, -1.174060848541103e-14, 0.0, 0.0,
    0.0, 0.0, 0.0, -1.6653345369377348e-16, 0.0]

R = sm.base.q2r([0.9074254167930225, 0.0, 0.0, -0.42021317561210453])
T = np.eye(4)
T[:3, :3] = R
T = sm.SE3(T)
r.base = sm.SE3(-0.0048143863677978516, 0.039366304874420166, 0.0) * T

# Add everything to the simulator
env.add(r)
for col in s:
    env.add(col)

# Leave open for 5 seconds then close the sim
time.sleep(5)
