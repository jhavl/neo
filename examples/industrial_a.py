#!/usr/bin/env python
"""
@author Jesse Haviland
"""

import roboticstoolbox as rtb
import spatialmath as sm
import spatialgeometry as sg
import swift
import numpy as np
import time

# Configurations
q0 = [0.4522, -0.0688,  0.4516, -1.3564,  2.6366, -1.2885,  2.7515]
q1 = [0.5645, -0.2949, -0.8384, -0.4594,  2.9742, -1.1313, -2.3144]
q2 = [0.2846, -0.3534, -2.2822, -1.2794, -2.6088, -1.298, -1.1206]
q3 = [0.281,  0.7666,  0.0846, -1.8104,  2.8603, -1.1027, -3.1227]
q4 = [0.0514, -0.3534, -2.8542, -1.7384, -2.95, -1.3661, -0.3652]
q5 = [0.2874, -0.0535, -2.3339, -1.2294, -2.8416, -1.3918, -0.9476]
q6 = [0.5259,  0.9754, -0.2409, -0.9607,  1.7601, -0.748, -1.6548]
q7 = [-0.4355,  1.2821, -0.5184, -1.4671,  2.7845, -0.2334, -2.709]
q8 = [-1.0536, -0.3436, -1.6586, -1.4779, -2.7631, -0.4247, -1.6377]
q9 = [-0.7221, -0.3534, -1.639, -1.7309, -2.8092, -0.9864, -1.5293]
q10 = [-0.3357, -0.1715, -0.3289, -2.0001,  1.6523, -1.9265,  2.5474]
q11 = [-0.3888,  1.0477, -1.1405, -0.7096,  0.9253, -0.5049, -0.3575]
qs = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11]

# Collisions
s1 = sm.Cuboid(
    scale=[0.4, 1.4, 0.02],
    base=sm.SE3(0.75, -0.1, 0.7))

s2 = sm.Cuboid(
    scale=[1.1, 0.3, 0.02],
    base=sm.SE3(0.4, -0.65, 0.7))

s3 = sm.Cuboid(
    scale=[0.02, 0.2, 0.3],
    base=sm.SE3(0.1, -0.7, 0.85))

s4 = sm.Cuboid(
    scale=[0.02, 0.2, 0.3],
    base=sm.SE3(0.3, -0.7, 0.85))

s5 = sm.Cuboid(
    scale=[0.02, 0.2, 0.3],
    base=sm.SE3(0.5, -0.7, 0.85))

s6 = sm.Cuboid(
    scale=[0.42, 0.3, 0.02],
    base=sm.SE3(0.3, -0.65, 0.71))

s7 = sm.Cuboid(
    scale=[0.02, 0.1, 0.06],
    base=sm.SE3(0.1, -0.55, 0.73))

s8 = sm.Cuboid(
    scale=[0.02, 0.1, 0.06],
    base=sm.SE3(0.3, -0.55, 0.73))

s9 = sm.Cuboid(
    scale=[0.02, 0.1, 0.06],
    base=sm.SE3(0.5, -0.55, 0.73))

s10 = sm.Cuboid(
    scale=[0.42, 0.02, 0.06],
    base=sm.SE3(0.3, -0.5, 0.73))

s11 = sm.Cuboid(
    scale=[0.42, 0.02, 0.06],
    base=sm.SE3(0.3, -0.59, 0.93))

s12 = sm.Cuboid(
    scale=[0.42, 0.02, 0.34],
    base=sm.SE3(0.3, -0.79, 0.87))

s13 = sm.Cuboid(
    scale=[0.42, 0.2, 0.02],
    base=sm.SE3(0.3, -0.7, 0.9))

s14 = sm.Cuboid(
    scale=[0.3, 0.02, 0.45],
    base=sm.SE3(0.8, 0.25, 0.925))

s15 = sm.Cuboid(
    scale=[0.3, 0.02, 0.45],
    base=sm.SE3(0.8, -0.25, 0.925))

s16 = sm.Cuboid(
    scale=[0.3, 0.52, 0.02],
    base=sm.SE3(0.8, -0.00, 1.16))

s17 = sm.Cuboid(
    scale=[0.42, 0.02, 0.34],
    base=sm.SE3(0.3, -0.79, 0.87))

s = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12,
     s13, s14, s15, s16, s17]

# Launch Simulator
env = swift.Swift()
env.launch()

# Make PR2 and set joint angles
r = rtb.models.PR2()
r.q = [
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.16825, 0.0, 0.0, 0.0, 0.4521781848795534, -0.06875607890205337,
    0.45157478971034287, -1.356432823197765, 2.63664188822003,
    -1.2884530258626397, 2.7514905004419816, 2.248201624865942e-15, 0.0, 0.0,
    0.0, 0.0, 0.0, -1.1102230246251565e-16, 1.1473791555597268,
    -0.2578419004077155, 0.5298918609954418, -2.121201719392923,
    2.198118788614387, -1.4189668927954484, 2.1828521334438378,
    -4.08006961549745e-15, 0.0, 0.0, 0.0, 0.0, 0.0, 7.549516567451064e-15,
    0.0]

R = sm.base.q2r([0.9999554696772218, 0.0, 0.0, 0.009437089731840358])
T = np.eye(4)
T[:3, :3] = R
T = sm.SE3(T)
r.base = sm.SE3(0, -0.05225612878799438, 0.0) * T

# Add everything to the simulator
env.add(r)
for col in s:
    env.add(col)

# Leave open for 5 seconds then close the sim
time.sleep(5)
